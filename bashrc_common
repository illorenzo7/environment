#!/bin/bash
# This set of commands gets called by all big environments
# Structure reintroduced: 05/06/2022
#
# state what's going on
echo $bufferstring
echo "Executing $envdir/bashrc_common"

# start by clearing all aliases
#unalias -a

# Make prompt show current working directory
PS1='\w$ '

# Pleiades directory shortcuts
export nb=/nobackup/lmatilsk
#export nb11=/nobackupp11/lmatilsk # no longer needed
export nb17=/nobackupp17/lmatilsk

# Rayleigh simulation root directories on Pleiades

# these guys are deprecated I think
#export rasim=$nb
#export tahy=$rasim/tachocline
#export tady=$tahy/dynamo

#export rasim11=$nb11
#export tahy11=$rasim11/tachocline
#export tady11=$tahy11/dynamo

# the Science paper
export tach=$pub/Tacho_Letter_Part2
export tachplots=$HOME/Tacho_Letter_Plots_Part2

# Extra appendages to PATH to allow 
# programs to be installed locally
export PATH=$PATH:$HOME/bin
export PATH=$PATH:$HOME/usr/bin

# other command aliases
alias fn='find `pwd` -name ' # fn for "full name"
alias gt='gnome-terminal'

# Get disk usage
get_du() {
    du -hsc * >> $(date +%F)_du
}

get_du_app() {
    du -hsc --apparent-size * >> $(date +%F)_du_app
}

# Source global definitions
if [ -f /etc/bashrc ]; then
    echo $bufferstring
    echo "Executing /etc/bashrc"
    . /etc/bashrc 
fi

# always ssh with display privileges
alias ssh='ssh -X'
alias less='less -MN' # make less show line numbers and  filename in status bar

# Commands to activate or deactivate various Conda environments,
alias base='conda activate base'
alias custom='conda activate custom'
alias de='conda deactivate'

# Python startup file
export PYTHONSTARTUP=$HOME/environment/python_startup.py
# Note: on Pleaides, there is also /etc/pythonstart, should I worry about this?

# LCD ssh shortcuts
export hyp=hyperion
export fre=freyr
export bac=bacchus
export tel=tellus
export hyd=hydra
export hyd2=hydra2
export scy=scylla

# LCD  hard-disk shortcuts
export alt=/altair/loma3853
export pol=/pollux/loma3853
export cast=/castor/loma3853 #/usr/bin/cas is a program on Freyr
export sarg=/sargas/loma3853 # /usr/sbin/sargas is a program on Freyr
export miz=/mizar/loma3853

# Rayleigh environent
export ra=$HOME/rayleigh
export racode=$ra/code
export rapp=$racode/post_processing

export raRyan=$HOME/rayleigh_Ryan
export racodeRyan=$raRyan/code
export rappRyan=$racodeRyan/post_processing

# sym links
alias linkra='ln -s $racode/bin/rayleigh.opt'
alias linkdbg='ln -s $racode/bin/rayleigh.dbg'
alias linkmain='ln -s $racode/bin/main/rayleigh.* .'
alias linkcustom='ln -s $racode/bin/custom/rayleigh.* .'
alias linkperfcond='ln -s $racode/bin/perfcond/rayleigh.* .'
alias linkmulti='ln -s $racode/bin/multi/rayleigh.* .'
alias linknobinrz='ln -s $racode/bin/noBinRZ/rayleigh.* .'

# post processing
export rau=$ra/utils
export raco=$rau/compute # /usr/bin/co is a command
export rapl=$rau/plot # /usr/bin/plot is a command
export idref=$raco/hydro_ideal_reference_state
alias runra='mpiexec -np 16 ./rayleigh.opt -nprow 4 -npcol 4'
alias runra1="./rayleigh.opt -nprow 1 -npcol 1"

# Configure rayleigh with .muck extension
alias configmuck='EXT=".muck" ./configure'

# Tar up some sample output (G_Avgs, Shell_Avgs, AZ_Avgs,
# Equatorial_Slices, Meridional_Slices, Shell_Slices, Shell_Spectra)
# as well as main_input, reference, transport, and grid_info for
# a given Rayleigh run directory
alias make_sample='tar -cvf datasample.tar $(find AZ_Avgs/ | sort | tail -n 3) $(find Equatorial_Slices/ | sort | tail -n 3) $(find G_Avgs/ | sort | tail -n 3)  $(find Meridional_Slices/ | sort | tail -n 3) $(find Shell_Avgs/ | sort | tail -n 3) $(find Shell_Slices/ | sort | tail -n 3) $(find Shell_Spectra/ | sort | tail -n 3) main_input equation_coefficients grid_info jobinfo.txt'

# Rayleigh routines

# parallel
# set default nproc based on hostname
host=`hostname`
#if [[ "$host" == *"$ldanst"* ]] || [[ "$host" == *"$nodest"* ]]; then
if [[ "$host" == "lfe"* ]] || [[ "$host" == "pfe"* ]]; then
    nproc=1 # process in serial on the lfes and pfes
elif [[ "$host" == "lorensMac"* ]] || [[ "$host" == "cu-genvpn"* ]] || [[ "$host" == *"eduroam"* ]]; then
    nproc=2
else
    nproc=`nproc --all` # by default, use max number of processes
fi
# ppc for "python parallel call"
export ppc="mpiexec -n $nproc python -u"
source $HOME/environment/bashrc_ra_routines

setnproc() {
    nproc=$1
    export ppc="mpiexec -n $nproc python -u"
    source $HOME/environment/bashrc_ra_routines
}

# count lines in a directory
# usage: countlines directory/ \*.[extension]
# NOTE: must include "\" before "*" so the wildcard doesn't get expanded
# when passed to the function ("\*" passes the asterisk verbatim in $2)
# Example:
# countlines compute/ \*py [note final slash is irrelevant; could use "compute"]
countlines() {
    find $1 -name "$2" -type f | xargs wc -l
}

# ffmpeg shortcut for making movies form img????.png files
alias ffm="ffmpeg3 -framerate 20 -i img%04d.png -qscale 5 movie.mp4"

# BASH SHORTCUTS
alias rmsslice="bash $rau/bash/rm_sslice.sh"

# moved from dotbashrc
# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/home5/loma3853/miniconda3/bin/conda' 'shell.bash' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "$HOME/miniconda3/etc/profile.d/conda.sh" ]; then
        . "$HOME/miniconda3/etc/profile.d/conda.sh"
    else
        export PATH="$HOME/miniconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

# get into 'custom' environment on login
custom
