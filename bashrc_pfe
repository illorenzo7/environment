#!/bin/bash
# state what's going on
echo $bufferstring
echo "Executing $brcpfe"

# .bashrc
# Author: Loren Matilsky
# Created: 07/07/2016

# Note: to unmigrate an entire directory from tape:
#dmfind [dirname] -state MIG -o -state OFL -o -state PAR | dmget

# To debug a RUNNING Pleiades job (perform complete stack trace)
# /u/scicon/tools/bin/pdsh_gdb -j job_id -d tmp -s -u lmatilsk -n gid
# this places a whole bunch of stack traces in text files in the directory
# tmp/, which is created in the current directory

# can do this more modularly
# qstsat -nu lmatilsk       shows list of nodes I am using
# ssh [one of the nodes]
# ps -u lmatilsk            shows a bunch of process IDs, probably running 
#                           Rayleigh    
# sg [group no.] -c "strace -p [PID]" 
# .... gets stacktrace (lots of output to give you a seizure!) must run 
# with sg if not submitted with your default group no.

# To verify if a STOPPED job got evicted due to lustre eviction, run
# ssh pbspl1
# module load scicon/lumber
# lumber -j [job_id]
# and grep SEC_EVENT on the resulting logfile
# Johnny Chang also suggets:
# strip all lines containing dhclient and systemd,e.g.,
# sed '/dhclient/d' [job_id].pbspl1.0.log.txt | sed '/systemd/d' > [job_id].pbspl1-stripped
# and search the latter file for SEC_EVENT

# THE FOLLOWING IS DEPRECATED (04/20/22):
# /u/scicon/tools/bin/get_logs [job_id]
# and grep SEC_EVENT on the resulting logfile

# To troubleshoot how a job failed, run
# ssh pbspl1 tracejob -n3 job_id
# This will ssh into pbspl1 and run tracejob going back 3 days (-n3) for job [jobid]

# say we haven't yet sourced common
export sourced_common_already=0

# color code directory contents
alias ls="ls --color='auto'"

#Load desired modules here.
module purge
module load scicon/cli_tools # for node_stats.sh
#module use -a /swbuild/analytix/tools/modulefiles
#module load miniconda3/v4
#module load pkgsrc  # dunno if this is necessary anymore

shopt -s direxpand # make bash expand environment variables

# Make terminals white on black
#xrdb $HOME/.Xresources

# Compiler environment variables
export INTEL_DISABLE_ISIP=1 # Stop ifort from creating annoying ~/intel/ism/rm empty directory
export OMP_NUM_THREADS=1
export FC=mpif90
export CC=mpicc

# request an ldan for 24 hours
alias ldan='qsub -me -mb -q ldan -lselect=1:mem=750GB,walltime=24:00:00 $HOME/environment/ldan_script'
alias which_ldan='qstat -nu lmatilsk | grep ldan'
alias which_interactive='python $raco/which_interactive_node.py'

# other command aliases
#alias jn='jupyter notebook --ip=0.0.0.0 --port=8080'
alias jn='jupyter-notebook --ip=127.0.0.1 --port=8080'
alias qs="/u/scicon/tools/bin/qs"   # check what nodes are being used currently
alias less='less -MN' # make less show line numbers and  filename in status bar
alias quota_nb='lfs quota -h -u lmatilsk /nobackupp11'

alias qst='qstat -u lmatilsk'       # check on status of jobs
alias sst='shiftc --status'         # check on status of shiftc transfers
#alias shiftc="shiftc --no-mail"           # don't send annoying emails

alias lscript='bash $rau/bash/lscript.sh'
alias lscriptall='bash $rau/bash/lscript_all.sh'
alias vlscriptall='bash $rau/bash/vlscript_all.sh'
alias dscriptall='bash $rau/bash/dscript_all.sh'
alias interactivenode='bash $rau/bash/submit_interactive_job.sh'

# function to request nodes from devel queue
devel () {
    modeltype=$1
    if [ $modeltype == 'bro' ]
    then
        ncpus=28
    elif [ $modeltype == 'has' ]
    then
        ncpus=24
    elif [ $modeltype == 'ivy' ] 
    then
        ncpus=20
    elif [ $modeltype == 'san' ] 
    then
        ncpus=16
    elif [ $modeltype == 'sky_ele' ] || [ $modeltype == 'cas_ait' ] 
    then
        ncpus=40
    elif [ $modeltype == 'mil_ait' ] || [ $modeltype == 'rom_ait' ]
    then
        ncpus=128
    else
        echo "unknown model type $modeltype"
    fi

    nprocs=$2
    select=$(($nprocs/$ncpus + 1))
    if [ $(($nprocs%$ncpus)) == 0 ]
    then
        select=$(($select - 1))
    fi

    echo "qsub -I -q devel -W group_list=s2051 -l select=$select:ncpus=$ncpus:mpiprocs=$ncpus:model=$1 -l walltime=02:00:00"
    qsub -I -q devel -W group_list=s2051 -l select=$select:ncpus=$ncpus:mpiprocs=$ncpus:model=$1 -l walltime=02:00:00
}

# same as devel() function, but for debug queue
debug () {
    modeltype=$1
    if [ $modeltype == 'bro' ]
    then
        ncpus=28
    elif [ $modeltype == 'has' ]
    then
        ncpus=24
    elif [ $modeltype == 'ivy' ] 
    then
        ncpus=20
    elif [ $modeltype == 'san' ] 
    then
        ncpus=16
    elif [ $modeltype == 'sky_ele' ] || [ $modeltype == 'cas_ait' ] 
    then
        ncpus=40
    elif [ $modeltype == 'mil_ait' ] || [ $modeltype == 'rom_ait' ]
    then
        ncpus=128
    else
        echo "unknown model type $modeltype"
    fi

    nprocs=$2
    select=$(($nprocs/$ncpus + 1))
    if [ $(($nprocs%$ncpus)) == 0 ]
    then
        select=$(($select - 1))
    fi

    echo "qsub -I -q debug -W group_list=s2051 -l select=$select:ncpus=$ncpus:mpiprocs=$ncpus:model=$1 -l walltime=02:00:00"
    qsub -I -q debug -W group_list=s2051 -l select=$select:ncpus=$ncpus:mpiprocs=$ncpus:model=$1 -l walltime=02:00:00
}

# Record account usage for various groups in ~/acct_ytd
acct_ytd_save() {
    acct_ytd >> $HOME/acct_ytd/$(date +%F_%H.%M)
}

gitdl() {
    git clone git@github.com:illorenzo7/$1.git
}

# Start the vnc server
alias vnc='vncserver -localhost -geometry 1280x800'

# suppress annoying XDG_RUNTIME_DIR warning
export XDG_RUNTIME_DIR="$HOME_PFE/tmp"

# source the common stuff
sbcommon

# Add some Pleiades-specific directory shortcuts
export tach=$nb/00_Tacho_Letter
export boulder=$nb/00_Boulder_Survey
export check=$nb/00_Rayleigh_Checkpoints

export postdoc=$nb/00_Summer_Postdoc
export casem=$tach/case_M
export caseh=$tach/case_H

# Tachocline sims
export tachsims=$nb/Tacho_ApJ_Low_Sigma_Sims
export tachsimsextra=$nb/Tacho_ApJ_Low_Sigma_Sims_Extra
#export tachapj=$nb/Tacho_ApJ_Low_Sigma
export tachapjnotebooks=$nb/Tacho_ApJ_Low_Sigma/notebooks
#export tachlett=$nb/Matilsky_Korre_Brummell_Tacho_ApJL_2025
export tachlettnotebooks=$nb/Matilsky_Korre_Brummell_Tacho_ApJL_2025/notebooks

export m0=$tachsims/case_M0
export m1=$tachsims/case_M1
export m2=$tachsims/case_M2
export m3=$tachsims/case_M3
export m4=$tachsims/case_M4
export m5=$tachsims/case_M5
export m6=$tachsims/case_M6
export m7=$tachsimsextra/case_M7_deep
export m8=$tachsimsextra/case_M8_sig0.3_pr0.5_prm8
export m9=$tachsimsextra/case_M9_nrho2_ra1e6_prm2
export m10=$tachsimsextra/case_M10_nrho2_ra5e6_prm2

export h0=$tachsims/case_H0
export h1=$tachsims/case_H1
export h2=$tachsims/case_H2
export h3=$tachsims/case_H3
export h4=$tachsims/case_H4
export h5=$tachsims/case_H5
export h6=$tachsims/case_H6
export h7=$tachsimsextra/case_H7_deep

export h5lyd=/nobackupp19/lkorre/solar_rot_conic/n2_A1_Ra1e6_Ek0.001
export h6lyd=/nobackupp19/lkorre/solar_rot_conic/n2_A1_Ra5e6_Ek0.00045
export h9lyd=/nobackupp19/lkorre/CZ-RZ_anelastic_ND/Rotating/Nrho\=3/A10_d3e9_Ra1e6_Ek0.001

export m5lyd=/nobackupp19/lkorre/Magnetism/Pm2n2A1Ra1e6Ek0.001
export m6lyd=/nobackupp19/lkorre/Magnetism/Pm2n2A1Ra5e6Ek0.00045
export m7lyd=/nobackupp19/lkorre/Magnetism/Pm4n2A1Ra1e6Ek0.001
export m8lyd=/nobackupp19/lkorre/Magnetism/Pm4n2A1Ra5e6Ek0.00045
export m9lyd=/nobackupp19/lkorre/Magnetism/Pm4n3A10Ra1e6Ek0.001

# NSF sims
export nsfsims=$nb/NSF_Dynamo_SpinDown_Sims

