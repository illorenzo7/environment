#!/bin/bash
# Author: Loren Matilsky
# Created: 07/07/2016
# Modified to work in new "environment" repo: 02/12/2021
# git autocomplete instructions (12/12/2022):
# https://apple.stackexchange.com/questions/55875/git-auto-complete-for-branches-at-the-command-line
# curl https://raw.githubusercontent.com/git/git/master/contrib/completion/git-completion.bash -o ~/.git-completion.bash

# say we haven't yet sourced common
export sourced_common_already=0

# state what's going on
echo $bufferstring
echo "Executing $envdir/bashrc_mac"

# color code directory contents
alias ls="ls -G" # Works on Mac
#alias ls="ls --color='auto'" # Works on general Unix, but not Mac :-( 

###############################
# Mac shortcuts               #
###############################

# Mac-specific prefixes
export rasims=$HOME/rayleigh/simulation_data

# NSF folder
export nsf=$HOME/AAPF
export nsfal=$nsf/00_NSF_Allowance
export nsfrec=$nsf/00_NSF_Allowance/Receipts

# Main folders (additional for Mac)
export mu=$HOME/Music/Music/Media

# Switch hidden folder on and off
alias showhidden='defaults write com.apple.Finder AppleShowAllFiles true && killall Finder'
alias nohidden='defaults write com.apple.Finder AppleShowAllFiles false && killall Finder'

# Path variables
# Extra appendages for Mac
export PATH=$PATH:/opt/intel/bin
export PATH=$PATH:/Applications/VAPOR/VAPOR.app/Contents/MacOS

# Necessary to make Rayleigh dynamically link with MKL
export DYLD_LIBRARY_PATH=/opt/intel/compilers_and_libraries_2019.0.117/mac/mkl/lib
# Remove duplicate entries in PATH:
#case ":$PATH:" in
#	*":$new_entry:"*) :;; # already there
#	*) PATH="$new_entry:$PATH";; # or PATH="$PATH:$new_entry"
#esac

# Set the Intel MKL root directory
export MKLROOT=/opt/intel/mkl
export MKL_INCLUDE=$MKLROOT/include
export MKL_LIBRARY=$MKLROOT/lib

# Configure Rayleigh on Mac
export FC=mpif90
export CC=gcc
export FFTWROOT=/usr/local
export LAPACKROOT=/usr
export BLASROOT=/usr
alias configra='./configure --FC=$FC --CC=$CC --with-fftw=$FFTWROOT --with-lapack=$LAPACKROOT --with-blas=$BLASROOT'

# Aliases
alias osxversion='defaults read loginwindow SystemVersionStampAsString'
	# print running version of OSX
alias jn='jupyter notebook'

# Download an entire website (dangerous!)
alias website-dl='wget --mirror -nH -np -p -k -E -e robots=off'

# Use Stroustrup's stupid include file
#alias g++='g++ -std=c++11 -I/Users/loren/CPLUSPLUS'

# Make compiler tell about "All Warnings" ot learn 
# c++ as a beginner (-Wall option). 
#alias g++='g++ -Wall'

# Sync folders with papers between Mac and LCD
# DEPRECATED (probably) 02/21/23:
alias syncbooks='rsync -avP ~/Desktop/Books/ freyr:~/Desktop/Books && rsync -avP freyr:~/Desktop/Books/ ~/Desktop/Books'
alias syncproposals='rsync -avP ~/Desktop/Proposals/ freyr:~/Desktop/Proposals && rsync -avP freyr:~/Desktop/Proposals/ ~/Desktop/Proposals'
alias syncpresentations='rsync -avP ~/Desktop/Presentations/ freyr:~/Desktop/Presentations && rsync -avP freyr:~/Desktop/Presentations/ ~/Desktop/Presentations'

# source the common stuff
sbcommon

#
# Add some Mac-specific directory shortcuts
#
# publication repositories
export tachapj=$pub/Tacho_ApJ_Low_Sigma
export tachlett=$pub/Matilsky_Korre_Brummell_Tacho_ApJL_2025
export tachapjnotebooks=$tachapj/notebooks
export tachlettnotebooks=$tachlett/notebooks
export superrot=$pub/Superrotation_and_Jet_Migration
export anelastic=$pub/An_Energy_Conserving_Anelastic_Approximation_for_Convective_Overshoot
export superrotnotebooks=$superrot/notebooks
export jupczonly=$pub/Jupiter_Wulff_CZonly
export jupwl=$pub/Jupiter_Wulff_WL

# avoid weird ssh key errors
alias ssh='ssh -X -oHostKeyAlgorithms=+ssh-dss -oPubkeyAcceptedAlgorithms=+ssh-rsa'
alias scp='scp -oHostKeyAlgorithms=+ssh-dss -oPubkeyAcceptedAlgorithms=+ssh-rsa'

# Commands to activate or deactivate various Conda environments,
alias base='conda activate base'
alias custom='conda activate custom'
alias radev='conda activate radev'
alias de='conda deactivate'

# command to link to a jupyter notebook on a Pleiades node
jbridge() {
    ssh -l lmatilsk -o "StrictHostKeyChecking ask" -L 8080:/tmp/user.sock -o ProxyJump=sfe,$1 $2
}

# moved from dotbashrc
# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/home5/loma3853/miniconda3/bin/conda' 'shell.bash' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "$HOME/miniconda3/etc/profile.d/conda.sh" ]; then
        . "$HOME/miniconda3/etc/profile.d/conda.sh"
    else
        export PATH="$HOME/miniconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

# get into 'custom' environment on login
custom
